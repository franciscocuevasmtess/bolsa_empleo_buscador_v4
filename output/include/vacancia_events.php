<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_vacancia  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeProcessList"]=true;


		$this->events["BeforeMoveNextList"]=true;

		$this->events["BeforeShowList"]=true;


		$this->events["BeforeProcessRowList"]=true;

		$this->events["BeforeDelete"]=true;

		$this->events["AfterDelete"]=true;


	}

//	handlers

				// List page: Before process
function BeforeProcessList($pageObject)
{

		$pageObject->hideItem("verificar_datos_bt"); // Oculta el boton Verificar-datos

;		
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: After record processed
function BeforeMoveNextList(&$data, &$row, &$record, $recordId, $pageObject)
{

		// Estado activo
// Habilitar botón Compartir y Postularse.
if ($data['id_estado'] == 2) {
	$pageObject->hideItem("custom_cancelar_postu", $recordId); // Oculta el botón "Cancelar Postulacion".

	$strSQLExistsl = "SELECT *
											FROM bolsa_empleo.postulacion
											WHERE id_vacancia = '".pg_escape_string($data["id_vacancias"])."' 
											AND fk_personaid = '".pg_escape_string($_SESSION["persona_id"])."' ";
	$rsExistsl = db_query($strSQLExistsl, $conn);
	$datal = db_fetch_array($rsExistsl);
	
	if ($datal) {
		//ya se postulo!
		$pageObject->hideItem("custom_postularse", $recordId);			//postularse
		$pageObject->showItem("custom_cancelar_postu", $recordId);	// cancelar postulacion
		$pageObject->hideItem("custom_button", $recordId);						// cancelar postulacion
	}
} //fin estado activo


// Vacancia Cerrada
if ($data['id_estado'] == 5) {
	$pageObject->hideItem("custom_postularse", $recordId);			// postularse
	$pageObject->hideItem("custom_cancelar_postu", $recordId);	// cancelar postulacion
	$pageObject->hideItem("custom_button", $recordId);						// cancelar postulacion
	$pageObject->hideItem("text6", $recordId);
	$pageObject->hideItem("grid_field4", $recordId); 
}


/* Muestra el logo de emplea py joven si: el Tipo_Fería_es_programa = true. */
/*if ($data['es_programa']) {
	$pageObject->showItem("logo_emplea_py_joven", $recordId);
} else {
	$pageObject->hideItem("logo_emplea_py_joven", $recordId); 
}*/

;		
} // function BeforeMoveNextList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowList(&$xt, &$templatefile, $pageObject)
{

		
$pageObject->hideItem("simple_grid_field2");
$pageObject->hideItem("simple_grid_field4");
$pageObject->hideItem("grid_field6"); // ciudad
$pageObject->hideItem("grid_field7"); // departamento
// $pageObject->hideItem("grid_field4");
$pageObject->hideItem("es_programa"); // Oculta el campo es_programa
$pageObject->hideItem("logo_emplea_py_joven");

$pageObject->hideItem("list_options", $recordId);
	
//**********  Check if specific record exists  ************//
$rs = DB::Query("SELECT count(v.id_vacancias) conteo, 
													sum ( v.cantidad_vacancia  ) as sumatoria
										FROM bolsa_empleo.vacancia v 
										WHERE v.id_estado_vacancia::integer = 2;");
$data = $rs->fetchAssoc();
if ($data) {
	$xt->assign('var_total', '<span style ="text-shadow: rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) -1px 0px 1px !important:" ><strong>'.$data['sumatoria'].'</strong> </span>');
}



/* VERIFICAR DATOS FALTANTES E INDICARLO INMEDIATAMENTE LUEGO DEL LOGIN */
$textoresultados = array();
$falta_datos = 0;

$rsDatos = DB::Query("
  SELECT
		(SELECT resumen FROM eportal.persons WHERE id = '".pg_escape_string($_SESSION["persona_id"])."') AS existe_resumen,
		(SELECT COUNT(*) FROM eportal.persons_phones WHERE type = 2 and person_id = '".pg_escape_string($_SESSION["persona_id"])."') AS count_phones,
		(SELECT city_id FROM eportal.persons WHERE id = '".pg_escape_string($_SESSION["persona_id"])."') AS existe_city,
		(SELECT domicilio  FROM eportal.persons WHERE id = '".pg_escape_string($_SESSION["persona_id"])."') AS existe_domicilio,
		(SELECT canthijos FROM eportal.persons WHERE id = '".pg_escape_string($_SESSION["persona_id"])."') AS existe_canthijos,
		(SELECT COUNT(*) FROM bolsa_empleo.vista_estudios_realizados_union_mec WHERE nro_documento = '".pg_escape_string($_SESSION["cedula"])."') AS count_educacion,
		(SELECT COUNT(*) FROM bolsa_empleo.cvc_experiencia_laboral WHERE fk_persona_id = '".pg_escape_string($_SESSION["persona_id"])."') AS count_experiencia_laboral,
		(SELECT COUNT(*) FROM eportal.persons_referencia WHERE id_persona = '".pg_escape_string($_SESSION["persona_id"])."') AS count_referencias_personales,
		(SELECT COUNT(*) FROM bolsa_empleo.cvc_idiomas WHERE fk_personaid = '".pg_escape_string($_SESSION["persona_id"])."') AS count_idiomas
");

while ($datafinal = $rsDatos->fetchAssoc()) {
	$existe_resumen = $datafinal['existe_resumen'];
	$count_phones = $datafinal['count_phones'];
	$existe_city = $datafinal['existe_city'];
	$existe_domicilio = $datafinal['existe_domicilio'];
	$existe_canthijos = $datafinal['existe_canthijos'];
	$count_educacion = $datafinal['count_educacion'];
	$count_experiencia_laboral = $datafinal['count_experiencia_laboral'];
	$count_referencias_personales = $datafinal['count_referencias_personales'];
	$count_idiomas = $datafinal['count_idiomas'];

	if (is_null($existe_resumen)) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php">Información Básica (Resumen Personal)</a>';
		$falta_datos = 1;
	}

	if ($count_phones < 1) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php">Información Básica (Número de Teléfono(WhatsApp))</a>';
		$falta_datos = 1;
	}
    
	if (is_null($existe_city)) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php">Información Básica (Ciudad)</a>';
		$falta_datos = 1;
	}

	if (is_null($existe_domicilio)) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php"> Información Básica (Dirección)</a>';
		$falta_datos = 1;
	}

	if (is_null($existe_canthijos)) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php">Información Básica (Cantidad de Hijos)</a>';
		$falta_datos = 1;
	}
    
	if ($count_educacion < 1 ) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php#2">Estudios Realizados</a>';
		$falta_datos = 1;
	}

	if ($count_experiencia_laboral < 1) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php#3">Experiencia Laboral</a>';
		$falta_datos = 1;
	}

	if ($count_referencias_personales < 1) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php#4">Referencias Personales</a>';
		$falta_datos = 1;
	}

	if ($count_idiomas < 1) {
		$textoresultados[] = '<br /><i class="bi bi-dot"></i> <a href="personas_pasos_edit.php#5">Conocimiento de idiomas</a>';
		$falta_datos = 1;
	}
}


/* CARGAR EN SESION BANDERA + MENSAJE */
if ($falta_datos == '1' ) {
	$pageObject->setProxyValue("faltan_datos", "1");
	$pageObject->setProxyValue("mensajeVerificacion", $textoresultados);
} else {
	$pageObject->setProxyValue("faltan_datos", "0");
	$pageObject->setProxyValue("mensajeVerificacion", $textoresultados);
}

;		
} // function BeforeShowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: Before record processed
function BeforeProcessRowList(&$data, $pageObject)
{

		

// Place event code here.
// Use "Add Action" button to add code snippets.

return true;

;		
} // function BeforeProcessRowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record deleted
function BeforeDelete($where, &$deleted_values, &$message, $pageObject)
{

		// Place event code here.
// Use "Add Action" button to add code snippets.

return true;
;		
} // function BeforeDelete

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record deleted
function AfterDelete($where, &$deleted_values, &$message, $pageObject)
{

		// Place event code here.
// Use "Add Action" button to add code snippets.
;		
} // function AfterDelete

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>
